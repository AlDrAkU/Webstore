﻿@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer
@model X.PagedList.IPagedList<Webstore.Models.Product>
@using X.PagedList.Mvc.Core;

@{
    Layout = "_Layout";
    var title = @ViewLocalizer["Products"];
}

<head>
    <title>@title</title>
</head>

<div class="text-center">
    <h1 class="text-3xl font-bold">@ViewLocalizer["Products"]</h1>

    @if (User.Identity.IsAuthenticated && !User.IsInRole("Seller") && !User.IsInRole("Admin"))
    {
        <p class="mt-4">
            <a asp-action="Create" class="inline-block px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600">Create New</a>
        </p>
    }
    <table class="table-auto w-full mt-8">
        <thead>
            <tr>
                <th class="px-4 py-2">@Html.DisplayNameFor(model => model.First().Name)</th>
                <th class="px-4 py-2">@Html.DisplayNameFor(model => model.First().Price)</th>
                <th class="px-4 py-2">@Html.DisplayNameFor(model => model.First().PhotoUrl)</th>
                <th class="px-4 py-2"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="border px-4 py-2">@Html.DisplayFor(modelItem => item.Name)</td>
                    <td class="border px-4 py-2">@Html.DisplayFor(modelItem => item.Price)</td>
                    <td><img src="@item.PhotoUrl" alt="@item.Name" class="w-24 h-24 object-contain" /></td>
                    @if (User.Identity.IsAuthenticated && !User.IsInRole("Seller") && !User.IsInRole("Admin"))
                    {
                        <td class="border px-4 py-2">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="inline-block px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id" class="inline-block px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id" class="inline-block px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600">Delete</a> |
                            <form class="add-to-cart-form d-inline">
                                <input type="hidden" name="productId" value="@item.Id" />
                                <select name="quantity" class="form-control d-inline w-auto">
                                    @for (int i = 1; i <= 10; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                                <button type="button" class="btn btn-primary add-to-cart-btn">Add to Cart</button>
                            </form>
                        </td>
                    }
                    
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-8">
        @Html.PagedListPager(Model, page => "/api/Products?page=" + page)
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.add-to-cart-btn').click(function (e) {
                e.preventDefault();

                var form = $(this).closest('.add-to-cart-form');
                var productId = form.find('input[name="productId"]').val();
                var quantity = form.find('select[name="quantity"]').val();
                var orderDate = new Date().toISOString();

                // Construct the URL with query parameters
                var url = '/api/Orders/AddToCart?productId=' + productId + '&quantity=' + quantity;

                $.ajax({
                    url: url,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert('Error adding product to cart.');
                        }
                    },
                    error: function () {
                        alert('Error adding product to cart.');
                    }
                });
            });
        });

    </script>
}
